{"version":3,"sources":["constants/index.js","components/actionControls/RangeSelector.js","components/actionControls/ChartSelector.js","components/actionControls/AddSymbol.js","util/Util.js","components/watchlist/WatchList.js","components/charts/Candle.js","components/charts/chartConfig.js","components/charts/Line.js","components/charts/Chart.js","App.js","index.js"],"names":["CHART_VALUES","RANGE_VALUES","DEFAULT_CHART","DEFAULT_RANGE","symbolMap","RangeSelector","activeRange","handleRangeSelector","handleRange","e","target","id","className","map","range","index","onClick","memo","ChartSelector","activeChart","handleChartSelector","value","onChange","chart","AddSymbol","handleAddSymbol","useState","currentSymbol","setCurrentSymbol","suggestions","setSuggestions","handleSymbolInput","useCallback","trim","newSuggestions","Object","keys","filter","symbol","toLowerCase","includes","placeholder","handleSymbolAdd","data","fetchData","Promise","resolve","returnData","slice","length","fetchLiveData","currentTimeStamp","moment","unix","getRandomNumber","liveData","generator","time","push","generateAllData","noOfYears","period","size","parseInt","valueDecrement","generateData","hrData","hrDataForEachSeconds","close","open","high","low","j","Math","random","obj","concat","reverse","formatData","details","i","subtract","format","sign","getRandomNumberInDecimal","Number","toFixed","min","max","floor","precision","val","setLocalStorage","key","localStorage","setItem","JSON","stringify","getLocalStorage","getItem","parse","WatchList","activeSymbol","currentValueOfActiveSymbol","handleSelectedSymbol","symbolList","setSymbolList","useEffect","handleSelected","active","updatedList","reduce","accumulater","current","hasOwnProperty","prevSymbolList","list","handleRemovedSymbol","stopPropagation","entries","Candle","handleCurrentValueUpdate","chartElementRef","useRef","candleSeries","intervalRef","resizeObserver","createChart","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","timeScale","timeVisible","secondsVisible","priceScale","scaleMargins","top","bottom","borderVisible","timezone","ResizeObserver","contentRect","width","height","applyOptions","setTimeout","fitContent","observe","setChartData","cleanup","disconnect","removeSeries","addCandlestickSeries","title","rightOffset","setData","getLiveData","setInterval","testdata","update","clearInterval","ref","style","Line","lineSeries","addLineSeries","Chart","a","loadData","then","renderChart","App","setActiveSymbol","setActiveChart","setActiveRange","setCurrentValueOfActiveSymbol","yesterdayPrice","percentage","priceColor","getPercentValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63895267.chunk.js","sourcesContent":["export const CHART_VALUES = ['Line', 'Candle']\n\nexport const RANGE_VALUES = ['Live', '1D', '1M', '1Y', 'All']\n\nexport const DEFAULT_CHART = CHART_VALUES[0]\n\nexport const DEFAULT_RANGE = RANGE_VALUES[0]\n\nexport const symbolMap = {\n  'AAPL' : 125,\n  'ADBE' : 470,\n  'BABA' : 225,\n  'DIS' : 185,\n  'FB' : 280,\n  'GOOGL' : 2000,\n  'INTC' : 65,\n  'JPM' : 155,\n  'MSFT' : 235,\n  'NELX' : 510,\n  'NVDA' : 510,\n  'ORCL' : 70,\n  'PEP' : 145,\n  'PYPL' : 240,\n  'QCOM' : 133,\n  'SHW' : 760,\n  'TSLA' : 618,\n  'UNH' : 335,\n  'WMT' : 135\n}\n\nexport const LIVE_CHART_UPDATE_TIME = 1500 //1.5 seconds\n","import React, { memo } from 'react';\nimport { RANGE_VALUES } from '../../constants'\nimport './styles/RangeSelector.scss'\n\nconst RangeSelector = ({ activeRange, handleRangeSelector }) => {\n\n  const handleRange = (e) => {\n    // console.log(e.target.id)\n    const activeRange = e.target.id\n    handleRangeSelector(activeRange)\n  }\n\n  // console.log(\"rendered Range ----->\")\n\n  return (\n    <div className=\"range-selector\">\n      {\n        RANGE_VALUES.map((range, index) => \n          <div \n            key={`${range}_${index}`} \n            id={range}\n            className={`range ${range === activeRange ? 'active' : '' }`}\n            onClick={handleRange}>\n            {range}\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default memo(RangeSelector)","import React, { memo } from 'react';\nimport { CHART_VALUES } from '../../constants'\nimport './styles/ChartSelector.scss'\n\nconst ChartSelector = ({ activeChart, handleChartSelector }) => {\n\n  const handleChart = (e) => {\n    // console.log(\"VAL :: \", e.target.value)\n    const activeChart = e.target.value\n    handleChartSelector(activeChart)\n  }\n\n  // console.log(\"rendered Chart ----->\")\n\n  return(\n    <div className=\"chart-selector\">\n      <select value={activeChart} onChange={handleChart}>\n        {\n          CHART_VALUES.map((chart, index) => \n            <option key={`${chart}_${index}`}>\n              {chart}\n            </option>\n          )\n        }\n      </select>\n    </div>\n  )\n}\n\nexport default memo(ChartSelector)\n \n","import React, { useCallback, useState, memo } from 'react';\nimport { symbolMap } from '../../constants'\nimport './styles/AddSymbol.scss'\n\nconst AddSymbol = ({ handleAddSymbol }) => {\n  const [currentSymbol, setCurrentSymbol] = useState('')\n  const [suggestions, setSuggestions] = useState([])\n\n  const handleSymbolInput = useCallback((e) => {\n    const value = e.target.value.trim()\n    const newSuggestions = value ? Object.keys(symbolMap).filter(symbol=>symbol.toLowerCase().includes(value.toLowerCase())) : []\n    setCurrentSymbol(value)\n    setSuggestions([...newSuggestions])\n  }, [])\n\n  const handleSymbolAdd = (symbol) => {\n    if(currentSymbol) {\n      handleAddSymbol(symbol, symbolMap[symbol])\n      setCurrentSymbol('')\n      setSuggestions([])\n    }\n  }\n\n  const handleClearInput = () => {\n    if(currentSymbol) {\n      setCurrentSymbol('')\n      setSuggestions([])\n    }\n  }\n\n  // console.log(\"rendered Input Symbol----->\")\n\n  return (\n    <div className=\"input-wrapper\">\n      <input \n        placeholder=\"Search Symbol...\"\n        value={currentSymbol} \n        onChange={handleSymbolInput}/>\n\n      <div className=\"suggestion-wrapper\">\n        {\n          suggestions.map((symbol)=>{\n            return (\n              <div key={symbol} className=\"suggestion-box\">\n                <div>{symbol}</div>\n                <div className=\"add-btn\" onClick={()=>handleSymbolAdd(symbol)}>\n                  Add\n                </div>\n              </div>\n            )\n          })\n        } \n      </div>\n\n      <div className=\"clear-btn\" onClick={handleClearInput}>\n        X\n      </div>\n    </div>\n  )\n}\n\nexport default memo(AddSymbol)","\n// import { dayData, monthData, yearData } from '../data/data'\nimport { symbolMap } from '../constants'\nimport moment from 'moment'\n\nlet data = [] // act as closure\n\nexport const fetchData_1 = (symbol, range) => { //this can be replaced with actual API\n  return new Promise(resolve => {\n    let data = []\n      switch(range) {\n        case '1D' : data = generateDayData(symbolMap[symbol], 50); // priceRange, daysData\n                    break; \n        case '1M' : data = generateMonthsData(symbolMap[symbol], 24); // priceRange, monthsData\n                    break;\n        case '1Y' : data = generateYearsData(symbolMap[symbol], 7); // priceRange, yearsData \n                    break;\n        default: data = generateDayData(symbolMap[symbol], 7);;\n      }\n      resolve(data);\n  });\n}\n\n/////\nexport const fetchData = (symbol, range) => { // keepiing same data while range change\n  return new Promise(resolve => {\n      let returnData = [] \n      switch(range) {\n        case '1D' : returnData = data.slice(data.length - 180)// daysData, priceRange //180 for each min for 2 hr\n                    break; \n        case '1M' : returnData = data.slice(1826-50, 1826); // monthsData in days, priceRange //1826 daily entries & 6 months = 180\n                    break;\n        case '1Y' : returnData = data.slice( 1826-(1826/5), 1826); // yearsData, priceRange  5yers data\n                    break;\n        case 'All': returnData = data.slice(0, 1826); // yearsData, priceRange \n                    break;          \n        default: returnData = data.slice(data.length - 100);\n      }\n      resolve(returnData);\n  });\n}\n\nexport const fetchLiveData = (symbol) => {\n  let currentTimeStamp = moment().unix()\n  let value = symbolMap[symbol]\n  value = getRandomNumber(value-5, value+10)\n\n  const liveData = generator(0, 1, value)\n  liveData.time = currentTimeStamp\n\n  if(data[data.length-1].time === currentTimeStamp){\n    // console.log(\"MATCH FOUND $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ LIVE UPDATE\")\n    return null //return if same timestamp generated\n  }\n\n  data.push(liveData) //data push to maintain incremental values while switching to Range(live/1m/1y/all)\n  \n  return liveData\n}\n\n// using this method to generate all data and swiching range passing that range data instead of creating random data on range change\nexport const generateAllData = (symbol, noOfYears=5) => {\n  const period = 1\n  const size = noOfYears * parseInt(365/period)\n  let valueDecrement = symbolMap[symbol]\n  data = generateData(size, period, valueDecrement) //generation day by day data\n  // console.log(\"% yesr size = \", data.length)\n\n  // generating timestamp data\n  const hrData = []\n  const hrDataForEachSeconds = 180 // 3 hr data for 1 min\n\n  let currentTimeStamp = moment().unix()\n\n  hrData.push({\n    time: currentTimeStamp,\n    close: valueDecrement, \n    open: valueDecrement-2, \n    high: valueDecrement+3, \n    low: valueDecrement-5\n  })\n\n  for(let j=1; j<hrDataForEachSeconds; j++){\n    if((j%5 === 0) && (valueDecrement > 15)) {\n      valueDecrement = valueDecrement - (Math.random() > 0.5 ? 5 : -3)\n    }\n    currentTimeStamp = currentTimeStamp - 60\n    const obj = generator(j, period, valueDecrement)\n    obj.time = currentTimeStamp\n\n    if(hrData[hrData.length-1].time === currentTimeStamp){\n      // console.log(\"MATCH FOUND $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\")\n      currentTimeStamp = currentTimeStamp - 60\n      obj.time = currentTimeStamp\n    }\n\n    hrData.push(obj)\n  }\n\n  data = data.concat(hrData.reverse())\n  // console.log(\"% yesr size = \", data.length)\n} \n\n//////\n\nexport const formatData = (data) => { //for lineChart \n  return data.map((details => {\n    return {\n      time: details.time, \n      value: details.close\n    }\n  }))\n}\n\nexport const generator = (i, period=1, value) => {\n  const time = moment().subtract(period * i, 'days').format('YYYY-MM-DD')\n  const sign = true\n  let close = value + getRandomNumberInDecimal(5, sign)\n  let open = value + getRandomNumberInDecimal(5, sign)\n  close = Number(close.toFixed(2))\n  open = Number(open.toFixed(2))\n\n  let high = (open>close) ? open + Math.random() : close + Math.random()\n  high = Number(high.toFixed(2))\n  let low = (open>close) ? close - Math.random() : open - Math.random()\n  low = Number(low.toFixed(2))\n  \n  // console.log(\"Test 123 =====>>\", time, high, close, open, low)\n  return {time, close, open, high, low}\n}\n\nexport const generateData = (size, period, value=100) => {\n  const data = []\n  data.push({\n    time: moment().format('YYYY-MM-DD'), \n    close: value, \n    open: value-2, \n    high: value+3, \n    low: value-5\n  })\n\n  let valueDecrement = value\n  for(let i=1; i<=size; i++){\n    if((i%5 === 0) && (valueDecrement > 15)) {\n      valueDecrement = valueDecrement - (Math.random() > 0.5 ? 5 : -3)\n    }\n    const obj = generator(i, period, valueDecrement)\n    data.push(obj)\n  }\n  return data.reverse()\n}\n\nexport const generateYearsData = (value, noOfYears=5) => {\n  const period = 7\n  const size = noOfYears * parseInt(365/period) // generating 5 days period of data  \n  return generateData(size, period, value)\n} \n\nexport const generateMonthsData = (value, noOfMonths=12) => {\n  const period = 3\n  const size = noOfMonths * parseInt(365/period) // generating 3 days period of data  \n  return generateData(size, period, value)\n} \n\nexport const generateDayData = (value, noOfDays=30) => {\n  const period = 1\n  const size = noOfDays // generating per day data\n  return generateData(size, period, value)\n}\n\nexport const getRandomNumber = (min, max) => { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport const getRandomNumberInDecimal = (range, sign=false) => { // generate +ve/-ve Number from 0 to given range \n  const precision = 100\n  const val = Math.floor(Math.random() * (range * precision - 1 * precision) + 1 * precision) / (1*precision);\n  if(sign){\n    const sign = Math.random() < 0.5 ? -1 : 1\n    return sign * val\n  }\n  return val\n}\n\n\nexport const setLocalStorage = (key, data) => {\n  // console.log(\"LOCAL DATA :: \", data)\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\nexport const getLocalStorage = (key) => {\n  let data = localStorage.getItem(key)\n  data = JSON.parse(data)\n  // console.log(\"LOCAL DATA GET:: \", data)\n  return data\n}","import React, { memo, useState, useCallback, useEffect } from 'react';\nimport AddSymbol from '../../components/actionControls/AddSymbol'\nimport { getRandomNumber, setLocalStorage, getLocalStorage } from '../../util/Util'\nimport './styles/WatchList.scss'\n\nconst WatchList = ({ activeSymbol, currentValueOfActiveSymbol, handleSelectedSymbol }) => {\n  const [symbolList, setSymbolList] = useState({...getLocalStorage('watchlist')} || {}) \n\n  useEffect(()=>{ // if local storage contains symbols then selecting 1st symbol by default\n    const list = Object.keys(symbolList)\n    if(list.length > 0) {\n      const activeSymbol = getLocalStorage('activeSymbol')\n      handleSelected(activeSymbol.active)\n    }\n  }, [])\n\n  useEffect(()=>{\n    // console.log(\"Curreunt Value \", currentValueOfActiveSymbol)\n    const updatedList = Object.keys(symbolList).reduce((accumulater, current) => {\n      if (current === activeSymbol) {\n        accumulater[current] = currentValueOfActiveSymbol\n      } else {\n        const value = symbolList[current]\n        accumulater[current] = Number(getRandomNumber( value-5, value+5 )) + Number(Math.random().toFixed(2))\n      }\n      return accumulater\n    }, {})\n\n    setSymbolList({...updatedList})\n  }, [currentValueOfActiveSymbol])\n\n  const handleAddSymbol = useCallback((symbol, value) => { // if symbol already present then don't add\n    // console.log(\"SYM :: \", symbol, )\n    if(!symbolList.hasOwnProperty(symbol)) {\n      setSymbolList(prevSymbolList => {\n        const list = { [symbol]: value, ...prevSymbolList }\n        setLocalStorage('watchlist', list) // add to local storage\n        return list\n      })\n      const list = Object.keys(symbolList)\n      if(list.length === 0) { // selecting symbol on adding if list empty \n        handleSelected(symbol) \n      }\n    }\n  }, [symbolList])\n\n  const handleRemovedSymbol = useCallback((e, symbol) => {\n    // console.log(\"EVEE ::: \", e, symbol)\n    e.stopPropagation()\n    const updatedList = Object.keys(symbolList).reduce((accumulater, current) => {\n      if (current !== symbol) {\n        accumulater[current] = symbolList[current]\n      }\n      return accumulater\n    }, {})\n\n    if(activeSymbol === symbol) { // if selected symbol removed \n      const list = Object.keys(updatedList)\n      if(list.length > 0) { // selecting 1st symbol \n        handleSelected(list[0]) \n      } else {\n        handleSelectedSymbol('', 0) // if list empty then resetting active Symbol and removing chart\n      }\n    }\n\n    setLocalStorage('watchlist', updatedList) // add to local storage\n    setSymbolList({...updatedList})\n  }, [symbolList, activeSymbol])\n\n  const handleSelected = (symbol) => {\n    handleSelectedSymbol(symbol, symbolList[symbol])\n  }\n \n  // console.log(\"rendered Stock List ----->\")\n\n  return (\n    <div className=\"stock-list\">\n      <div className=\"heading\">Watchlist</div>\n      <AddSymbol handleAddSymbol={handleAddSymbol}/> \n      <div className=\"list\">\n        {\n          Object.entries(symbolList).map(([symbol, value], index) => {\n            return (             \n              <div \n                className={`symbol ${symbol === activeSymbol ? 'active-symbol' : ''}`} \n                key={`${symbol}`} \n                onClick={()=>handleSelected(symbol)}>\n                  <div className=\"name\">{symbol}</div>\n                  <div className=\"value\">{value}</div>\n                  <div className=\"remove\" onClick={(e)=>handleRemovedSymbol(e, symbol)}>X</div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default memo(WatchList)","import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { config } from './chartConfig' \nimport { fetchLiveData } from '../../util/Util'\nimport { LIVE_CHART_UPDATE_TIME } from '../../constants'\n\nconst Candle = ({ data, activeSymbol, activeRange, handleCurrentValueUpdate }) => {\n  const chartElementRef = useRef()\n  const chart = useRef()\n  const candleSeries = useRef() \n  const intervalRef = useRef()\n  const resizeObserver = useRef()\n\n  useEffect(() => {\n    chart.current = createChart(chartElementRef.current, config());\n    resizeObserver.current = new ResizeObserver(entries => {\n      const { width, height } = entries[0].contentRect;\n      chart.current.applyOptions({ width, height });\n      setTimeout(() => {\n        chart.current.timeScale().fitContent();\n      }, 0);\n    });\n    resizeObserver.current.observe(chartElementRef.current);\n    \n    setChartData()\n\n    return () => {\n      cleanup()\n      resizeObserver.current.disconnect();\n    }\n  }, []);\n\n  useEffect(()=>{\n    // console.log(\"STATE :: >>>>>>>>>>>>> \", chart.current)  \n    chart.current.removeSeries(candleSeries.current)\n    cleanup()\n    setChartData()\n  }, [data])\n\n  const setChartData = () => {\n    candleSeries.current = chart.current.addCandlestickSeries({title: activeSymbol});\n    chart.current.timeScale().fitContent();\n    \n    if (activeRange === '1Y' || activeRange === 'All') {\n      chart.current.applyOptions({ timeScale: { timeVisible: false }});\n    } else if(activeRange === '1M') {\n      chart.current.applyOptions({ timeScale: { rightOffset: 5, timeVisible: false }});\n    } else {\n      chart.current.applyOptions({ timeScale: { rightOffset: 5, timeVisible: true }});\n    } \n\n    candleSeries.current.setData(data);\n    getLiveData()\n  }\n\n  const getLiveData = () => {\n    // let counter = 50\n    intervalRef.current = setInterval(() => {\n      // counter--\n      let testdata = fetchLiveData(activeSymbol, activeRange)  \n      // console.log(\"TEST DATA Candle Chart\", testdata)  \n      if(testdata !== null) {\n        if(activeRange === 'Live') { // then only update on chart\n          candleSeries.current.update(testdata)\n        } \n        handleCurrentValueUpdate(testdata.close)\n      }\n      \n      // if (counter <= 0) {\n      //   cleanup()\n      // }\n    }, LIVE_CHART_UPDATE_TIME)\n  }\n\n  const cleanup = () => {\n    intervalRef.current && clearInterval(intervalRef.current)\n  }\n\n  // console.log(\"CANDLE RENDER ------->\", data)\n  \n  return (\n    <div ref={chartElementRef} style={{width: '100%', height:'100%'}} />\n  );\n}\n\nexport default Candle\n","export const config = () => {\n  return {\n    layout: {\n      backgroundColor: '#ffffff',\n      textColor: 'rgba(33, 56, 77, 1)',\n    },\n    grid: {\n      vertLines: {\n        color: 'rgba(197, 203, 206, 0.7)',\n      },\n      horzLines: {\n        color: 'rgba(197, 203, 206, 0.7)',\n      },\n    },\n    timeScale: {\n      timeVisible: true,\n      secondsVisible: false,\n    },\n    priceScale: {\n      scaleMargins: {\n        top: 0.3,\n        bottom: 0.25\n      },\n      borderVisible: false\n    },\n    timezone: \"Asia/Kolkata\",\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { config } from './chartConfig' \nimport { fetchLiveData, formatData } from '../../util/Util'\nimport { LIVE_CHART_UPDATE_TIME } from '../../constants'\n\nconst Line = ({ data, activeSymbol, activeRange, handleCurrentValueUpdate }) => {\n  const chartElementRef = useRef()\n  const chart = useRef()\n  const lineSeries = useRef() \n  const intervalRef = useRef()\n  const resizeObserver = useRef()\n\n  useEffect(()=>{\n    chart.current = createChart(chartElementRef.current, config());\n    resizeObserver.current = new ResizeObserver(entries => {\n      const { width, height } = entries[0].contentRect;\n      chart.current.applyOptions({ width, height });\n      setTimeout(() => {\n        chart.current.timeScale().fitContent();\n      }, 0);\n    });\n    resizeObserver.current.observe(chartElementRef.current);\n\n    setChartData()\n\n    return () => {\n      cleanup()\n      resizeObserver.current.disconnect()\n    }\n  }, [])\n\n  useEffect(()=>{\n    // console.log(\"STATE :: >>>>>>>>>>>>>>\", chart.current)  \n    chart.current.removeSeries(lineSeries.current)\n    cleanup()\n    setChartData()\n  }, [data])\n\n  const setChartData = () => {\n    lineSeries.current = chart.current.addLineSeries({title: activeSymbol});\n    chart.current.timeScale().fitContent();\n    \n    if (activeRange === '1Y' || activeRange === 'All') {\n      chart.current.applyOptions({ timeScale: { timeVisible: false }});\n    } else if(activeRange === '1M') {\n      chart.current.applyOptions({ timeScale: { rightOffset: 5, timeVisible: false }});\n    } else {\n      chart.current.applyOptions({ timeScale: { rightOffset: 5, timeVisible: true }});\n    } \n\n    lineSeries.current.setData(data);\n    getLiveData()\n  }\n\n  const getLiveData = () => {\n    // let counter = 50\n    intervalRef.current = setInterval(() => {\n      // counter--\n      let testdata = fetchLiveData(activeSymbol, activeRange)\n      if(testdata !== null) {\n        testdata = formatData([testdata])[0]\n        // console.log(\"TEST DATA Line Chart\", testdata)\n        if(activeRange === 'Live') { // then only update on chart\n          lineSeries.current.update(testdata)\n        } \n        handleCurrentValueUpdate(testdata.value)\n      }\n      // if (counter <= 0) {\n      //   cleanup()\n      // }\n    }, LIVE_CHART_UPDATE_TIME)\n  }\n\n  const cleanup = () => {\n    intervalRef.current && clearInterval(intervalRef.current)\n  }\n\n  return (\n    <div ref={chartElementRef} style={{width: '100%', height:'100%'}} />\n  );\n}\n\nexport default Line\n","\nimport React, { memo, useState, useEffect, useCallback } from 'react';\nimport Candle from '../../components/charts/Candle'\nimport Line from '../../components/charts/Line'\nimport { fetchData, formatData, generateAllData } from '../../util/Util'\nimport './styles/Chart.scss'\n\nconst Chart = ({ activeSymbol, activeChart, activeRange, handleCurrentValueUpdate }) => {\n  // console.log(\"CHART :: \", activeChart)\n  const [data, setData] = useState([])\n\n  useEffect(async () => {\n    // console.log(\"GENERATOR +++++++++++++++++++++++++>>>>>>>>>>>\")\n    await generateAllData(activeSymbol)\n  }, [activeSymbol])\n\n  useEffect(() => {\n    async function loadData () {\n      return await fetchData(activeSymbol, activeRange)\n    }\n    \n    loadData().then((data) => {\n      // console.log(\"Returned DATA ::: +++ \", data, JSON.stringify(data))\n      setData([...data])\n    })  \n  }, [activeRange, activeSymbol])\n\n\n  const renderChart = useCallback(() => {\n    // console.log(\"changed data\")\n    switch(activeChart) {\n      case 'Line': return (\n                    <Line \n                      data={formatData(data)} \n                      activeSymbol={activeSymbol}\n                      activeRange={activeRange}\n                      handleCurrentValueUpdate={handleCurrentValueUpdate}/>\n                    )\n      case 'Candle': return (\n                      <Candle \n                        data={data} \n                        activeSymbol={activeSymbol}\n                        activeRange={activeRange}\n                        handleCurrentValueUpdate={handleCurrentValueUpdate}/>\n                      )\n      default: return (\n                <Line \n                  data={formatData(data)} \n                  activeSymbol={activeSymbol}\n                  activeRange={activeRange}\n                  handleCurrentValueUpdate={handleCurrentValueUpdate}/>\n                )\n    }\n  }, [activeChart, data])\n\n  return (\n    <div className=\"chart\"> \n      {renderChart()} \n    </div>\n  )\n}\n\nexport default memo(Chart)\n","import React, { useCallback, useState, Fragment } from 'react';\nimport RangeSelector from './components/actionControls/RangeSelector'\nimport ChartSelector from './components/actionControls/ChartSelector' \nimport WatchList from './components/watchlist/WatchList'\nimport Chart from './components/charts/Chart'\nimport { DEFAULT_CHART, DEFAULT_RANGE, symbolMap } from './constants'\nimport { setLocalStorage } from './util/Util'\nimport './App.scss';\n\nfunction App() {\n  const [activeSymbol, setActiveSymbol] = useState('')\n  const [activeChart, setActiveChart] = useState(DEFAULT_CHART)\n  const [activeRange, setActiveRange] = useState(DEFAULT_RANGE)\n  const [currentValueOfActiveSymbol, setCurrentValueOfActiveSymbol] = useState(0) \n\n  const handleSelectedSymbol = useCallback((symbol, value=0) => {\n    setLocalStorage('activeSymbol', {active: symbol}) // storing selected symbol in localstorage, on refresh it will select by default\n    setActiveSymbol(symbol) \n    setCurrentValueOfActiveSymbol(value)\n  }, [])\n\n  const handleRangeSelector = useCallback((range) => {\n    setActiveRange(range)\n  }, [])\n\n  const handleChartSelector = useCallback((chart) => {\n    setActiveChart(chart)\n  }, [])\n\n  const handleCurrentValueUpdate = useCallback((value)=>{\n    setCurrentValueOfActiveSymbol(value)\n  }, [])\n\n  const getPercentValue = () => {\n    const yesterdayPrice = symbolMap[activeSymbol]\n    const percentage = ((currentValueOfActiveSymbol - yesterdayPrice) / yesterdayPrice) * 100\n    const priceColor = currentValueOfActiveSymbol > yesterdayPrice ? 'green' : 'red'\n    return (\n      <span className={`${priceColor}`}>\n        {`${percentage.toFixed(2)}%`}\n      </span>\n    )\n  }\n\n  // console.log(\"Active symbol :::::: \" , activeSymbol)\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {/* <div className=\"header\">\n          Stocks View App\n        </div> */}\n        \n        <div className=\"action-bar\">\n          <div className=\"project-name\">Stocks View App</div>\n          \n          <div className=\"status\">\n          {\n            !!activeSymbol && \n              <Fragment>\n                <span className=\"current-value\">{activeSymbol} : {currentValueOfActiveSymbol}</span>\n                { \n                  (currentValueOfActiveSymbol > 0) &&\n                    <span className=\"percentage\">({getPercentValue()})</span>\n                }\n              </Fragment>\n          }\n          </div> \n          <div className=\"selector-container\">\n            <RangeSelector \n              activeRange={activeRange}\n              handleRangeSelector={handleRangeSelector}/>\n            <ChartSelector \n              activeChart={activeChart}\n              handleChartSelector={handleChartSelector}/>\n          </div>\n        </div>\n        \n        <div className=\"main\">\n          <WatchList \n            activeSymbol={activeSymbol}\n            currentValueOfActiveSymbol={currentValueOfActiveSymbol}\n            handleSelectedSymbol={handleSelectedSymbol}\n            />\n          { !!activeSymbol \n            ? <Chart \n                activeSymbol={activeSymbol}\n                activeChart={activeChart}\n                activeRange={activeRange}\n                handleCurrentValueUpdate={handleCurrentValueUpdate}/>\n            : <div className=\"warning\"> Watchlist is Empty. Please Add Symbol to watchlist </div>  \n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}